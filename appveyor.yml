services:
  - mssql2016
  - iis
image:
  - Visual Studio 2017
environment:
  matrix:
    - TEST_SUITE: core-kernel
    - TEST_SUITE: core-extensions-kernel-1
    - TEST_SUITE: unit
install:
# Set up the Environment
  - cmd: mkdir c:\testlogs
  - ps: (New-Object Net.WebClient).DownloadFile('https://github.com/Beakerboy/drupal-sqlsrv-regex/releases/download/1.0/RegEx.dll', 'C:\testlogs\RegEx.dll')
build_script:
  - cmd: sqlcmd -U sa -P Password12! -Q "CREATE DATABASE mydrupalsite"
  - cmd: sqlcmd -d mydrupalsite -U sa -P Password12! -Q "EXEC sp_configure 'show advanced options', 1; RECONFIGURE; EXEC sp_configure 'clr enable', 1; RECONFIGURE"
  - cmd: sqlcmd -d mydrupalsite -U sa -P Password12! -Q "CREATE ASSEMBLY Regex from 'C:\testlogs\RegEx.dll' WITH PERMISSION_SET = SAFE"
  - cmd: sqlcmd -d mydrupalsite -U sa -P Password12! -Q "CREATE FUNCTION dbo.REGEXP(@pattern NVARCHAR(100), @matchString NVARCHAR(100)) RETURNS bit EXTERNAL NAME Regex.RegExCompiled.RegExCompiledMatch"
  # SET UP PHP
  # is OpenSSL needed?
  - ps: choco install php --version=7.3.12 --package-parameters="/InstallDir:C:\tools\php" -y --no-progress 2>&1 > C:\TestLogs\choco_install_php.txt
  - ps: choco install urlrewrite -y --no-progress 2>&1 > C:\testlogs\choco_install_urlrewrite.txt
  - ps: choco install OpenSSL.Light -y --no-progress 2>&1 > C:\testlogs\choco_install_openssl.txt
  - ps: $Env:Path = "C:\Program Files\OpenSSL;" + $Env:Path;
  - ps: |
      $cli = New-Object Net.WebClient
      $cli.Headers['User-Agent'] = 'Appveyor';
      $cli.DownloadFile('https://windows.php.net/downloads/pecl/releases/pdo_sqlsrv/5.8.1/php_pdo_sqlsrv-5.8.1-7.3-nts-vc15-x64.zip', 'C:\testlogs\php_pdo_sqlsrv.zip')
  - ps: |
      $cli = New-Object Net.WebClient
      $cli.Headers['User-Agent'] = 'Appveyor';
      $cli.DownloadFile('http://windows.php.net/downloads/pecl/releases/yaml/2.1.0/php_yaml-2.1.0-7.3-nts-vc15-x64.zip', 'C:\testlogs\php_yaml.zip')
  - ps: Expand-Archive -Path 'C:\testlogs\php_pdo_sqlsrv.zip' -Destinationpath 'C:\testlogs\php_pdo_sqlsrv'
  - cmd: copy C:\testlogs\php_pdo_sqlsrv\php_pdo_sqlsrv.dll C:\tools\php\ext
  - ps: Expand-Archive -Path 'C:\testlogs\php_yaml.zip' -Destinationpath 'C:\testlogs\php_yaml'
  - cmd: xcopy C:\testlogs\php_yaml\php_yaml.dll C:\tools\php\ext
  # Start Windows Update service
  - cmd: sc config wuauserv start= auto
  - cmd: net start wuauserv
  - ps: (New-Object Net.WebClient).DownloadFile('https://curl.haxx.se/ca/cacert.pem', 'C:\tools\php\cacert.pem')
  # Add php binary to PATH
  - ps: $Env:Path = "C:\tools\php;" + $Env:Path;
  # Edit the php.ini file - Should we have a php.ini.dist file somewhere that we just `cat` into the exiting file?
  - ps: Add-Content C:\tools\php\php.ini "extension_dir=ext"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_pdo_sqlsrv"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_openssl"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_mbstring"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_curl"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_yaml"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_gd2.dll"
  - ps: Add-Content C:\tools\php\php.ini 'curl.cainfo="C:\tools\php\cacert.pem"'
  - ps: Add-Content C:\tools\php\php.ini 'openssl.cafile="C:\tools\php\cacert.pem"'
  # Set up Drupal
  # Create a directory for composer and install
  - ps: new-item c:\composer -itemtype directory
  - cmd: cd /d C:\composer
  - cmd: choco install composer --version=4.10.0 -y --no-progress
  - ps: refreshenv
  - cmd: SET PATH=C:\ProgramData\ComposerSetup\bin;%PATH%
  - cmd: cd /d c:\projects
  # Create a new drupal project
  - cmd: set COMPOSER_MEMORY_LIMIT=-1
  - cmd: git clone https://git.drupalcode.org/project/drupal.git -b 9.1.x drupal-project
  - cmd: cd /d C:\projects\drupal-project
  # Apply and pre-composer patches
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-07-28/3151118-31.patch', 'C:\projects\drupal-project\3151118.patch')
  - cmd: git apply 3151118.patch
  - cmd: del 3151118.patch
  - cmd: composer install
  # Add composer installed binaries to PATH
  - cmd: SET PATH=C:\projects\drupal-project\vendor\bin;%PATH%
  - cmd: cd /d C:\projects\drupal-project
  # Install other composer packages for production
  # Copy in the module
  - cmd: xcopy /S /I /E /Y %APPVEYOR_BUILD_FOLDER%\dev\TestSuites %APPVEYOR_BUILD_FOLDER%\tests\src\TestSuites
  - cmd: xcopy /S /I /E /Y %APPVEYOR_BUILD_FOLDER%\dev\CITestSuiteBase.php %APPVEYOR_BUILD_FOLDER%\tests\src\TestSuites
  - cmd: xcopy /S /I /E /Y %APPVEYOR_BUILD_FOLDER% %cd%\modules\sqlsrv
  - cmd: cd /d C:\projects\drupal-project
  - cmd: mkdir C:\projects\drupal-project\sites\simpletest
  - cmd: mkdir C:\projects\drupal-project\sites\simpletest\browser_output
  # Core Condition not able to be overridden in views.
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-07-18/3130655-44.patch', 'C:\projects\drupal-project\3130655-44.patch')
  - cmd: git apply 3130655-44.patch
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  - ps: ((Get-Content -path dev\phpunit.xml.dist -Raw) -replace 'WEB_DIR/sites/simpletest/browser_output','C:\projects\drupal-project\sites\simpletest\browser_output') | Set-Content -Path dev\phpunit.xml.dist
before_test:
  - cmd: cp dev\phpunit.xml.dist C:\projects\drupal-project\core\phpunit.xml
  - cmd: mkdir .\build\logs
test_script:
  - cmd: cd C:\projects\drupal-project
  - cmd: vendor\bin\phpunit -vvv -c core\phpunit.xml --testsuite=%TEST_SUITE%
