skip_tags: true
init:
  - ps: ''
services:
  - mssql2016
  - iis
hosts:
  www.mydrupalsite.com: 127.0.0.1
image:
  - Visual Studio 2017
environment:
  matrix:
    - TEST_SUITE: sqlsrv
    - TEST_SUITE: core-extensions-kernel-1
install:
  #- ps: $Env:APPVEYOR_REPO_COMMIT_MESSAGE_FULL = "$env:APPVEYOR_REPO_COMMIT_MESSAGE $env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED".TrimEnd();
  - cmd: mkdir c:\testlogs
  - ps: Start-Service 'MSSQL$SQL2016' | out-null
  - ps: Set-Service 'SQLAgent$SQL2016' -StartupType Manual | out-null
  - ps: Start-Service W3SVC | out-null
  - ps: choco install php --version=7.3.12 --package-parameters="/InstallDir:C:\tools\php" -y --no-progress 2>&1 > C:\TestLogs\choco_install_php.txt
  - ps: choco install urlrewrite -y --no-progress 2>&1 > C:\TestLogs\choco_install_urlrewrite.txt
  - ps: choco install OpenSSL.Light -y --no-progress 2>&1 > C:\TestLogs\choco_install_openssl.txt
  - ps: | 
      $WorkingDir = Convert-Path .
      $ZipPath = Join-Path $WorkingDir '\chef_cmdlet.zip'
      (New-Object Net.WebClient).DownloadFile('https://ci.appveyor.com/api/projects/David19767/iischef/artifacts/iischef.cmdlet.zip?branch=1.x', $ZipPath)
      $DESTINATION= Join-Path $env:ProgramFiles "\WindowsPowerShell\Modules\Chef"
      New-Item -ItemType directory -Force -Path $DESTINATION
      (new-object -com shell.application).namespace($DESTINATION).CopyHere((new-object -com shell.application).namespace($ZipPath).Items(),16)
      Remove-Item $ZipPath
  - ps: $Env:Path = "C:\Program Files\OpenSSL;" + $Env:Path;
  # Start Windows Update service
  - cmd: sc config wuauserv start= auto
  - cmd: net start wuauserv
  - ps: (New-Object Net.WebClient).DownloadFile('https://curl.haxx.se/ca/cacert.pem', 'C:\tools\php\cacert.pem')
  # Add php binary to PATH
  - ps: $Env:Path = "C:\tools\php;" + $Env:Path;
  # Edit the php.ini file - Should we have a php.ini.dist file somewhere that we just `cat` into the exiting file?
  - ps: Add-Content C:\tools\php\php.ini "extension_dir=ext"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_openssl"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_mbstring"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_curl"
  - ps: Add-Content C:\tools\php\php.ini "extension=php_gd2.dll"
  - ps: Add-Content C:\tools\php\php.ini 'curl.cainfo="C:\tools\php\cacert.pem"'
  - ps: Add-Content C:\tools\php\php.ini 'openssl.cafile="C:\tools\php\cacert.pem"'
  # Create a directory for composer and install
  - ps: new-item c:\composer -itemtype directory
  - cmd: cd /d C:\composer
  - cmd: choco install composer --version=4.10.0 -y --no-progress
  - ps: refreshenv
  - cmd: SET PATH=C:\ProgramData\ComposerSetup\bin;%PATH%
  - ps: |
      If ($Env:APPVEYOR_REPO_COMMIT_MESSAGE_FULL -imatch 'rdpcomposer') {
        $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }
  - cmd: composer global require hirak/prestissimo --no-progress
  - cmd: cd /d c:\projects
  # Create a new drupal project
  - cmd: set COMPOSER_MEMORY_LIMIT=-1
  - cmd: git clone https://git.drupalcode.org/project/drupal.git -b 8.8.x drupal-project
  # Add composer installed binaries to PATH
  - cmd: SET PATH=C:\projects\drupal-project\vendor\bin;%PATH%
  - cmd: cd /d C:\projects\drupal-project
  - cmd: composer config repositories.drupal composer https://packages.drupal.org/8
  # Install other composer packages for production
  - cmd: composer require symfony/psr-http-message-bridge:1.1.x-dev
  # Copy in the module
  - cmd: xcopy /S /I /E /Y %APPVEYOR_BUILD_FOLDER%\dev\appveyor\TestSuites %APPVEYOR_BUILD_FOLDER%\tests\src\
  - cmd: xcopy /S /I /E /Y %APPVEYOR_BUILD_FOLDER% %cd%\modules\contrib\sqlsrv
  - cmd: xcopy /S /I /E /Y %APPVEYOR_BUILD_FOLDER%\drivers %cd%\drivers
  - cmd: cd /d C:\projects\drupal-project
  - cmd: xcopy "%APPVEYOR_BUILD_FOLDER%\dev\appveyor" "C:\projects\drupal-project\chef" /r /s /i
  - ps: Invoke-ChefSelfInstall -Path "c:\chef"
  - ps: Invoke-ChefAppDeployPath "C:\projects\drupal-project" drupal -Install
  - ps: $site = Invoke-ChefAppGetDeployment drupal
  - ps: $Env:DATABASENAME = $site.DeploymentActive.GetRuntimeSetting("services.default.database", "");
  - ps: $Env:DATABASEPASSWORD = $site.DeploymentActive.GetRuntimeSetting("services.default.password", "");
  - ps: $Env:DATABASEUSER = $site.DeploymentActive.GetRuntimeSetting("services.default.username", "");
  - ps: $Env:DATABASEHOST = $site.DeploymentActive.GetRuntimeSetting("services.default.host", "");
  - ps: $Env:SITERUNTIMEPATH = $site.DeploymentActive.runtimePath;
  # Make the site's PHP environment the default PHP environment
  - cmd: set path=%SITERUNTIMEPATH%\php;%path%
  - ps: Invoke-Sqlcmd -Username sa -Password "Password12!" -Query "CREATE DATABASE mydrupalsite"
  # Enable Regex
  - ps: (New-Object Net.WebClient).DownloadFile('https://github.com/Beakerboy/drupal-sqlsrv-regex/releases/download/1.0/RegEx.dll', 'C:\projects\drupal-project\web\RegEx.dll')
  - ps: Invoke-Sqlcmd -Database mydrupalsite -Username sa -Password "Password12!" -Query "EXEC sp_configure 'show advanced options', 1; RECONFIGURE; EXEC sp_configure 'clr strict security', 0; RECONFIGURE; EXEC sp_configure 'clr enable', 1; RECONFIGURE"
  - ps: Invoke-Sqlcmd -Database mydrupalsite -Username sa -Password "Password12!" -Query "CREATE ASSEMBLY Regex from 'C:\projects\drupal-project\web\RegEx.dll' WITH PERMISSION_SET = SAFE"
  - ps: Invoke-Sqlcmd -Database mydrupalsite -Username sa -Password "Password12!" -Query "CREATE FUNCTION dbo.REGEXP(@pattern NVARCHAR(100), @matchString NVARCHAR(100)) RETURNS bit EXTERNAL NAME Regex.RegExCompiled.RegExCompiledMatch"
build_script:
  # Logger backtrace incorrect. pushed to 9.x
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-05-27/2867788-92.patch')
  # core Condition not able to be overridden in views...needs work. 
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-05-04/3130655-10.patch')
  - cmd: git apply 2867788-92.patch
  - cmd: git apply 3130655-10.patch
  # Testing-only patches
  # view sort order bug
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-06-05/3146016-3.patch')
  - cmd: git apply 3146016-3.patch
  # Fix format of deprecation notices for phpcs 
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-02-25/3108540-11.patch')
  # Add a sqlsrv-specific datatype to test
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-02-05/drupal-3111134-database_specific_types-3.patch')
  # Enable sqlsrv module in specific kernel tests
  - ps: (New-Object Net.WebClient).DownloadFile('https://www.drupal.org/files/issues/2020-05-02/2966272-16.patch')
  - cmd: git apply 2966272-16.patch
  - cmd: git apply drupal-3111134-database_specific_types-3.patch
  - cmd: git apply 3108540-11.patch
before_test:
  - cmd: cd C:\projects\drupal-project
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  - cmd: cp dev\travis\phpunit.xml.dist C:\projects\drupal-project\core\phpunit.xml
  - cmd: mkdir .\build\logs

test_script:
  - cmd: cd C:\projects\drupal-project
  - cmd: phpunit -vvv -c core\phpunit.xml --testsuite=%TEST_SUITE%

after_test:

